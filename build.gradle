buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath group: 'org.kt3k.gradle.plugin', name: 'coveralls-gradle-plugin', version: GRADLE_COVERALLS_VERSION
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

group = 'com.marcnuri'
version = '0.0.2'
sourceCompatibility = 1.8
description = "Common Spring Framework testing utilities"

repositories {
    mavenCentral()
}

dependencies {
    compileOnly group: 'org.springframework', name: 'spring-beans', version: SPRING_VERSION
    compileOnly group: 'org.springframework', name: 'spring-context', version: SPRING_VERSION
    compileOnly group:  'org.mockito', name: 'mockito-core', version: MOCKITO_VERSION
    testCompile group: 'org.springframework', name: 'spring-beans', version: SPRING_VERSION
    testCompile group: 'org.springframework', name: 'spring-context', version: SPRING_VERSION
    testCompile group:  'org.mockito', name: 'mockito-core', version: MOCKITO_VERSION
    testCompile group: 'junit', name: 'junit', version: JUNIT_VERSION
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: HAMCREST_VERSION
    testCompile group: 'org.springframework', name: 'spring-test', version: SPRING_VERSION

}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}
def resolvedOssrhUsername=''
def resolvedOssrhPassword=''

if (project.hasProperty("ossrhUsername")) {
    resolvedOssrhUsername = ossrhUsername
}
if (project.hasProperty("ossrhPassword")) {
    resolvedOssrhPassword = ossrhPassword
}
uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(
                        userName: resolvedOssrhUsername,
                        password: resolvedOssrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(
                        userName: resolvedOssrhUsername,
                        password: resolvedOssrhPassword)
            }

            pom.project {
                name 'spring-common-test'
                packaging 'jar'
                description 'Common Spring Framework testing utilities'
                url 'https://github.com/manusa/spring-common-test'

                scm {
                    connection 'scm:git:git://github.com/manusa/spring-common-test.git'
                    developerConnection 'scm:git:ssh://github.com:manusa/spring-common-test.git'
                    url 'https://github.com/manusa/spring-common-test'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        name 'Marc Nuri'
                        email 'marc@marcnuri.com'
                    }
                }
            }
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}